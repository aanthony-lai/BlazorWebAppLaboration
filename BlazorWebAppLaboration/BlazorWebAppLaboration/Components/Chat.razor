@inject IDbContextFactory<AppDbContext> dbContext
@inject OpenAIService openAIService

@if(!isChat)
{
	<div class="chat-logo">
		<img @onclick="ShowCloseChat" src="https://cdn.icon-icons.com/icons2/2943/PNG/512/chat_icon_184003.png" />
	</div>
}
else
{
	<div class="container">
		<div id="close-logo">
			<img @onclick="ShowCloseChat" src="https://icons.veryicon.com/png/o/object/material_design_icons/window-close-1.png" />
		</div>
		<div class="message-container">
			<div class="message">
				<p style="color:black">Hello, how can I help you?</p>
			</div>
			@foreach (var message in history)
			{ 
				if (message.Role.Label == "system" || message.Role.Label == "tool")
				{
					continue;
				}
				<div class="message">
					<p style="color:@(message.Role.Label == "user" ? "blue" : "black")">@message.Content</p>
				</div> 
			 } 
		</div>
		<div class="group-input">
			<input @bind-value="userMessage" type="text" placeholder="Your message..." />
			<img @onclick="SendMessage" src="https://cdn-icons-png.flaticon.com/512/3106/3106794.png" />
		</div>
	</div>
}

@code {
	ChatHistory history = [];
	string userMessage = string.Empty;
	bool isChat = false;

	async Task SendMessage()
	{
		history = await openAIService.SendMessage(userMessage);
		userMessage = string.Empty;
		history = await openAIService.Response();
	}

	void ShowCloseChat()
	{
		isChat = !isChat;
	}
}